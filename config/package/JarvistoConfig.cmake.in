if(CMAKE_VERSION VERSION_LESS 3.25.1)
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "Jarvisto requires CMake 3.25.1 or later")
    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    return()
endif()
cmake_minimum_required(VERSION 3.25.1)

@PACKAGE_INIT@

# Work out the set of components to load by default
if(${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
    set(comps ${${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS})
else()
    set(comps Core)
endif()
set(${CMAKE_FIND_PACKAGE_NAME}_comps ${comps})

# Find external dependencies
set(${CMAKE_FIND_PACKAGE_NAME}_comps ${comps})
include(CMakeFindDependencyMacro)

# Check all required components are available before loading any
foreach(comp IN LISTS {${CMAKE_FIND_PACKAGE_NAME}_comps)
    set(compFile ${CMAKE_CURRENT_LIST_DIR}/Jarvisto${comp}Targets.cmake)
    if(${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_${comp} AND NOT EXISTS ${compFile})
        set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "Jarvisto missing required component: ${comp}")
        set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
        return()
    endif()
endforeach()

# Include components config file
foreach(comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_comps)
    include(${CMAKE_CURRENT_LIST_DIR}/Jarvisto${comp}Targets.cmake OPTIONAL)
    if (${comp} STREQUAL "Core")
        find_dependency(date)
        find_dependency(spdlog)
    endif()
    if (${comp} STREQUAL "Network")
        find_dependency(Boost COMPONENTS url)
        find_dependency(PkgConfig)
        pkg_check_modules(SigCpp REQUIRED IMPORTED_TARGET sigc++-3.0)
        pkg_check_modules(Mosquitto REQUIRED IMPORTED_TARGET libmosquitto)
        pkg_check_modules(OpenSSL REQUIRED IMPORTED_TARGET libcrypto)
        pkg_check_modules(OpenCrypto REQUIRED IMPORTED_TARGET libssl)
    endif()
endforeach()
